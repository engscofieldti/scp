
package org.dgac.ws.integration.server.alfresco;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.dgac.ws.integration.client.alfresco.WsAlmacenarAlfrescoIF;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AlmacenarDocumentosService", targetNamespace = "http://soa.jboss.org/almacenardocumentos", wsdlLocation = "http://172.24.2.250:8080/alfresco.services/ebws/almacenardocumentos/AlmacenarDocumentos?wsdl")
public class AlmacenarDocumentosService
    extends Service
{

    private final static URL ALMACENARDOCUMENTOSSERVICE_WSDL_LOCATION;
    private final static WebServiceException ALMACENARDOCUMENTOSSERVICE_EXCEPTION;
    private final static QName ALMACENARDOCUMENTOSSERVICE_QNAME = new QName("http://soa.jboss.org/almacenardocumentos", "AlmacenarDocumentosService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://172.24.2.250:8080/alfresco.services/ebws/almacenardocumentos/AlmacenarDocumentos?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ALMACENARDOCUMENTOSSERVICE_WSDL_LOCATION = url;
        ALMACENARDOCUMENTOSSERVICE_EXCEPTION = e;
    }

    public AlmacenarDocumentosService() {
        super(__getWsdlLocation(), ALMACENARDOCUMENTOSSERVICE_QNAME);
    }

    public AlmacenarDocumentosService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ALMACENARDOCUMENTOSSERVICE_QNAME, features);
    }

    public AlmacenarDocumentosService(URL wsdlLocation) {
        super(wsdlLocation, ALMACENARDOCUMENTOSSERVICE_QNAME);
    }

    public AlmacenarDocumentosService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ALMACENARDOCUMENTOSSERVICE_QNAME, features);
    }

    public AlmacenarDocumentosService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AlmacenarDocumentosService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AlmacenarDocumentosPortType
     */
    @WebEndpoint(name = "AlmacenarDocumentosPortType")
    public AlmacenarDocumentosPortType getAlmacenarDocumentosPortType() {
        return super.getPort(new QName("http://soa.jboss.org/almacenardocumentos", "AlmacenarDocumentosPortType"), AlmacenarDocumentosPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AlmacenarDocumentosPortType
     */
    @WebEndpoint(name = "AlmacenarDocumentosPortType")
    public AlmacenarDocumentosPortType getAlmacenarDocumentosPortType(WebServiceFeature... features) {
        return super.getPort(new QName("http://soa.jboss.org/almacenardocumentos", "AlmacenarDocumentosPortType"), AlmacenarDocumentosPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ALMACENARDOCUMENTOSSERVICE_EXCEPTION!= null) {
            throw ALMACENARDOCUMENTOSSERVICE_EXCEPTION;
        }
        return ALMACENARDOCUMENTOSSERVICE_WSDL_LOCATION;
    }
    
    /**
     * 
     * @return
     *     returns WsAlmacenarAlfrescoIF
     */
    @WebEndpoint(name = "AlmacenarDocumentosPortType")
    public WsAlmacenarAlfrescoIF getWsAlmacenarAlfrescoPort() {
        return super.getPort(new QName("http://soa.jboss.org/almacenardocumentos", "AlmacenarDocumentosPortType"), WsAlmacenarAlfrescoIF.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WsAlmacenarAlfrescoIF
     */
    @WebEndpoint(name = "AlmacenarDocumentosPortType")
    public WsAlmacenarAlfrescoIF getWsAlmacenarAlfrescoPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soa.jboss.org/almacenardocumentos", "AlmacenarDocumentosPortType"), WsAlmacenarAlfrescoIF.class, features);
    }

}
