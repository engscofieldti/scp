
package org.dgac.ws.integration.server.alfresco.buscar;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.dgac.ws.integration.client.alfresco.buscar.WsBuscarAlfrescoIF;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ObtenerDocumentoService", targetNamespace = "http://soa.jboss.org/obtenerdocumento", wsdlLocation = "http://172.24.2.250:8080/alfresco.services/ebws/obtenerdocumento/ObtenerDocumento?wsdl")
public class ObtenerDocumentoService
    extends Service
{

    private final static URL OBTENERDOCUMENTOSERVICE_WSDL_LOCATION;
    private final static WebServiceException OBTENERDOCUMENTOSERVICE_EXCEPTION;
    private final static QName OBTENERDOCUMENTOSERVICE_QNAME = new QName("http://soa.jboss.org/obtenerdocumento", "ObtenerDocumentoService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://172.24.2.250:8080/alfresco.services/ebws/obtenerdocumento/ObtenerDocumento?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        OBTENERDOCUMENTOSERVICE_WSDL_LOCATION = url;
        OBTENERDOCUMENTOSERVICE_EXCEPTION = e;
    }

    public ObtenerDocumentoService() {
        super(__getWsdlLocation(), OBTENERDOCUMENTOSERVICE_QNAME);
    }

    public ObtenerDocumentoService(WebServiceFeature... features) {
        super(__getWsdlLocation(), OBTENERDOCUMENTOSERVICE_QNAME, features);
    }

    public ObtenerDocumentoService(URL wsdlLocation) {
        super(wsdlLocation, OBTENERDOCUMENTOSERVICE_QNAME);
    }

    public ObtenerDocumentoService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OBTENERDOCUMENTOSERVICE_QNAME, features);
    }

    public ObtenerDocumentoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ObtenerDocumentoService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ObtenerDocumentoPortType
     */
    @WebEndpoint(name = "ObtenerDocumentoPortType")
    public ObtenerDocumentoPortType getObtenerDocumentoPortType() {
        return super.getPort(new QName("http://soa.jboss.org/obtenerdocumento", "ObtenerDocumentoPortType"), ObtenerDocumentoPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ObtenerDocumentoPortType
     */
    @WebEndpoint(name = "ObtenerDocumentoPortType")
    public ObtenerDocumentoPortType getObtenerDocumentoPortType(WebServiceFeature... features) {
        return super.getPort(new QName("http://soa.jboss.org/obtenerdocumento", "ObtenerDocumentoPortType"), ObtenerDocumentoPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (OBTENERDOCUMENTOSERVICE_EXCEPTION!= null) {
            throw OBTENERDOCUMENTOSERVICE_EXCEPTION;
        }
        return OBTENERDOCUMENTOSERVICE_WSDL_LOCATION;
    }
    
    /**
     * 
     * @return
     *     returns WsBuscarAlfrescoIF
     */
    @WebEndpoint(name = "ObtenerDocumentoPortType")
    public WsBuscarAlfrescoIF getWsObtenerAlfrescoPort() {
        return super.getPort(new QName("http://soa.jboss.org/obtenerdocumento", "ObtenerDocumentoPortType"), WsBuscarAlfrescoIF.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WsBuscarAlfrescoIF
     */
    @WebEndpoint(name = "ObtenerDocumentoPortType")
    public WsBuscarAlfrescoIF getWsObtenerAlfrescoPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soa.jboss.org/obtenerdocumento", "ObtenerDocumentoPortType"), WsBuscarAlfrescoIF.class, features);
    }

}
